version: '3.3'
services:
  backend:
    network_mode: host # FIXME?
    build: .
    env_file:
      - ".env"
    depends_on:
      - db
      - rabbitmq
    command: >
      gunicorn accompanist.main:app
      --workers ${NUM_WORKERS}
      --worker-class uvicorn.workers.UvicornWorker
      --bind=0.0.0.0:${BACKEND_PORT}
    celery-worker:
      network_mode: host # FIXME?
      build: .
      env_file:
        - ".env"
      depends_on:
        - db
        - rabbitmq
      command:
        celery -A accompanist.celery.main.app worker --loglevel info -E
  frontend:
    ports:
      - ${FRONTEND_PORT}:80
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        BACKEND_PORT: ${BACKEND_PORT}
  db:
    image: postgres:16
    ports:
    - ${DB_PORT}:5432
    environment:
        - POSTGRES_DB=${DB_NAME}
        - POSTGRES_PASSWORD=${DB_PASS}
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 5s
        timeout: 5s
        retries: 5
    volumes:
        - postgres-volume:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq
    restart: always
    ports:
      - ${RABBITMQ_PORT}:5672
volumes:
  postgres-volume: