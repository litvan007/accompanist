version: '3.3'
services:

  backend:
    network_mode: host # FIXME?
    build: .
    env_file:
      - ".env"
    depends_on:
      - db
      - rabbitmq
    command: >
      gunicorn accompanist.main:app
      --workers ${NUM_WORKERS}
      --worker-class uvicorn.workers.UvicornWorker
      --bind=0.0.0.0:${FASTAPI_PORT}
    volumes:
    - ./storage-volume:/storage
    environment:
    - STORAGE_PATH=/storage

  celery-worker:
    network_mode: host # FIXME?
    build: .
    env_file:
      - ".env"
    depends_on:
      - db
      - rabbitmq
    command:
      celery -A accompanist.celery.main.app worker --loglevel info -E
    volumes:
      - ./storage-volume:/storage
    environment:
      - STORAGE_PATH=/storage
    deploy: # GPU is used only by celery worker
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]


  frontend:
    ports:
      - ${DOCKER_FRONTEND_PORT}:80
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NGINX_PORT: ${NGINX_PORT}

  nginx:
    image: nginx:latest
    network_mode: host # FIXME?
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx.env:/etc/nginx/templates/10-variables.conf.template:ro
      - ${STORAGE_PATH}:/usr/share/nginx/html/static
    depends_on:
      - backend
    environment:
      - FASTAPI_PORT=${FASTAPI_PORT}

  db:
    image: postgres:16
    ports:
    - ${DB_PORT}:5432
    environment:
        - POSTGRES_DB=${DB_NAME}
        - POSTGRES_PASSWORD=${DB_PASS}
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 5s
        timeout: 5s
        retries: 5
    volumes:
        - postgres-volume:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq
    restart: always
    ports:
      - ${RABBITMQ_PORT}:5672

volumes:
  postgres-volume:
  # ./storage-volume is used as a bind mount